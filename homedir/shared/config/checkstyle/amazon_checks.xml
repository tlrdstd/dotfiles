<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
    Developer Tools Checkstyle configuration composed of:

    - the Java Language Specification at
      http://docs.oracle.com/javase/specs/
      http://docs.oracle.com/javase/specs/jls/se8/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html

    - the JDK Api documentation http://docs.oracle.com/javase/8/docs/api/

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sourceforge.net/index.html (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.
    - See all checks here: http://checkstyle.sourceforge.net/checks.html

-->

<module name="Checker">
    <property name="basedir" value=""/>

    <!--
        First, we declare modules that run outside TreeWalker on all file types:
    -->

    <!-- [Javadoc Comments] Checks that a package-info.java exists for each package -->
    <module name="JavadocPackage">
        <property name="severity" value="ignore"/>
        <property name="allowLegacy" value="true" />
        <property name="fileExtensions" value="" />
    </module>

    <!-- [Miscellaneous] -->
    <module name="NewlineAtEndOfFile"> <!-- Enforce that files end with a new line. -->
        <property name="severity" value="error"/>
        <property name="lineSeparator" value="system"/>
    </module>

    <module name="Translation"> <!-- Checks that property files contain the same keys. -->
        <property name="severity" value="error"/>
        <property name="fileExtensions" value="properties"/>
        <property name="baseName" value="^messages.*$"/>
        <property name="requiredTranslations" value=""/>
    </module>

    <!-- [Regexp] -->
    <module name="RegexpSingleline">
        <property name="severity" value="error"/>
        <property name="ignoreCase" value="false"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="fileExtensions" value=""/>
        <property name="format" value="\s+$"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>

    <!-- [Size Violations] Check for long source files -->
    <module name="FileLength">
        <property name="severity" value="error"/>
        <property name="max" value="2000"/>
        <property name="fileExtensions" value=""/>
    </module>

    <!-- [Whitespace] -->
    <!-- Check that there are no tab characters ('\t') in the source code. -->
    <module name="FileTabCharacter">
        <property name="severity" value="error"/>
        <property name="eachLine" value="true"/>
        <property name="fileExtensions" value=""/>
    </module>
    <!-- Check for Windows newlines. The `checkstyle` target disables this check when running on Windows. -->
    <module name="RegexpMultiline">
        <property name="severity" value="error"/>
        <property name="message" value="File contains carriage return (Windows newlines). Run `dos2unix` to convert this file to Unix line endings."/>
        <property name="format" value="\r"/>
    </module>

    <!-- [Filters] Suppression Filters to avoid Checkstyle checks on particular files & methods. -->
    <!-- See http://checkstyle.sourceforge.net/config_filters.html -->
    <module name="SuppressionFilter">
        <!-- <property name="file" value="" /> -->
        <property name="optional" value="false" />
    </module>

    <module name="SuppressWarningsFilter"/>

    <!-- [Size Violations] -->
    <!-- See http://checkstyle.sourceforge.net/config_sizes.html -->
    <module name="LineLength">
        <property name="severity" value="error"/>
        <property name="max" value="120"/>
        <!-- Ignore "$Id: <path>" lines in Amazon source files. -->
        <property name="ignorePattern" value=""
                  default="(^ *\** *\$Id\:)|^import.*|^package.*|a href|href|http://|https://|ftp://"/>
    </module>

    <!-- Secondly, we declare modules crawled by the TreeWalker that apply to *.java files:
        Annotations
        Block Checks
        Class Design
        Coding
        Headers
        Imports
        Javadoc Comments
        Metrics
        Miscellaneous
        Modifiers
        Naming Conventions
        Regexp
        Size Violations
        Whitespace
        SuppressionCommentFilter
    -->
    <module name="TreeWalker">
        <property name="tabWidth" value="8"/>

        <!-- Make annotations available to suppress warnings, such as:
            @SuppressWarnings({"checkstyle:ParameterNumber", "checkstyle:MethodLength"})
            public void someLongMethod() throws Exception {
        -->
        <module name="SuppressWarningsHolder" />

        <!-- [Annotations] Checks annotation tags -->
        <!-- See http://checkstyle.sourceforge.net/config_annotation.html -->

        <!-- [Block Checks] Checks those {}'s. -->
        <!-- See http://checkstyle.sourceforge.net/config_blocks.html -->
        <module name="EmptyBlock">
            <property name="severity" value="error"/>
            <property name="option" value="text"/>
            <property name="tokens" value="LITERAL_WHILE, LITERAL_TRY, LITERAL_FINALLY, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, INSTANCE_INIT, STATIC_INIT, LITERAL_SWITCH, LITERAL_SYNCHRONIZED"/>
        </module>
        <module name="LeftCurly">
            <property name="severity" value="error"/>
            <property name="option" value="eol"/>
            <property name="ignoreEnums" value="true"/>
            <property name="tokens" value="INTERFACE_DEF, CLASS_DEF, ANNOTATION_DEF, ENUM_DEF, CTOR_DEF, METHOD_DEF, ENUM_CONSTANT_DEF, LITERAL_WHILE, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_SYNCHRONIZED, LITERAL_SWITCH, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, STATIC_INIT, OBJBLOCK, LAMBDA"/>
        </module>
        <module name="NeedBraces">
            <property name="severity" value="error"/>
            <property name="allowSingleLineStatement" value="true"/>
            <property name="allowEmptyLoopBody" value="true"/>
            <property name="tokens" value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE"/>
        </module>
        <module name="RightCurly">
            <property name="severity" value="error"/>
            <property name="option" value="same"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE"/>
        </module>

        <!-- [Class Design] Checks for class design. -->
        <!-- See http://checkstyle.sourceforge.net/config_design.html -->
        <module name="FinalClass">
            <property name="severity" value="error"/>
        </module>
        <module name="HideUtilityClassConstructor">
            <property name="severity" value="error"/>
        </module>
        <module name="InterfaceIsType">
            <property name="severity" value="error"/>
            <property name="allowMarkerInterfaces" value="true"/>
        </module>
        <module name="VisibilityModifier">
            <property name="severity" value="error"/>
            <property name="packageAllowed" value="false"/>
            <property name="protectedAllowed" value="false"/>
            <property name="publicMemberPattern" value="^serialVersionUID$"/>
            <property name="allowPublicFinalFields" value="true"/>
            <property name="allowPublicImmutableFields" value="true"/>
            <property name="immutableClassCanonicalNames" value="java.lang.String, java.lang.Integer, java.lang.Byte, java.lang.Character, java.lang.Short, java.lang.Boolean, java.lang.Long, java.lang.Double, java.lang.Float, java.lang.StackTraceElement, java.math.BigInteger, java.math.BigDecimal, java.io.File, java.util.Locale, java.util.UUID, java.net.URL, java.net.URI, java.net.Inet4Address, java.net.Inet6Address, java.net.InetSocketAddress"/>
            <property name="ignoreAnnotationCanonicalNames" value="org.junit.Rule, org.junit.ClassRule, com.google.common.annotations.VisibleForTesting"/>
        </module>

        <!-- [Coding] Checks for common coding problems. -->
        <!-- See http://checkstyle.sourceforge.net/config_coding.html -->
        <module name="AvoidInlineConditionals">
            <property name="severity" value="info"/>
        </module>
        <module name="EmptyStatement">
            <property name="severity" value="error"/>
        </module>
        <module name="EqualsHashCode">
            <property name="severity" value="error"/>
        </module>
        <module name="HiddenField">
            <property name="severity" value="error"/>
            <property name="ignoreFormat" value=""/>
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
            <property name="setterCanReturnItsClass" value="false"/>
            <property name="ignoreAbstractMethods" value="false"/>
            <property name="tokens" value="VARIABLE_DEF, PARAMETER_DEF, LAMBDA"/>
        </module>
        <module name="IllegalInstantiation">
            <property name="severity" value="error"/>
            <property name="classes" value=""/>
            <property name="tokens" value="CLASS_DEF"/>
        </module>
        <module name="InnerAssignment">
            <property name="severity" value="error"/>
        </module>
        <module name="MagicNumber">
            <property name="severity" value="ignore"/>
            <property name="ignoreNumbers" value="-1, 0, 1, 2"/>
            <property name="ignoreHashCodeMethod" value="true"/>
            <property name="ignoreAnnotation" value="true"/>
            <property name="ignoreFieldDeclaration" value="true"/>
            <property name="constantWaiverParentToken" value="ASSIGN, ARRAY_INIT, EXPR, UNARY_PLUS, UNARY_MINUS, TYPECAST, ELIST, LITERAL_NEW, METHOD_CALL, STAR, DIV, PLUS, MINUS"/>
            <property name="tokens" value="NUM_DOUBLE, NUM_FLOAT, NUM_INT, NUM_LONG"/>
        </module>
        <module name="MissingSwitchDefault">
            <property name="severity" value="error"/>
        </module>
        <module name="NoFinalizer">
            <property name="severity" value="error"/>
        </module>
        <module name="OneStatementPerLine">
            <property name="severity" value="error"/>
        </module>
        <module name="SimplifyBooleanExpression">
            <property name="severity" value="error"/>
        </module>
        <module name="SimplifyBooleanReturn">
            <property name="severity" value="error"/>
        </module>

        <!-- [Headers] Checks that source files begin with specified headers. -->
        <!-- See http://checkstyle.sourceforge.net/config_header.html#Content -->

        <!-- [Imports] Checks for import statements. -->
        <!-- See http://checkstyle.sourceforge.net/config_imports.html -->
        <module name="AvoidStarImport">
            <property name="severity" value="error"/>
            <property name="excludes" value=""/>
            <property name="allowClassImports" value="false"/>
            <property name="allowStaticMemberImports" value="false"/>
        </module>
        <module name="IllegalImport"> <!-- by default, rejects all sun.* packages -->
            <property name="severity" value="error"/>
            <property name="illegalPkgs" value="sun"/>
        </module>
        <module name="RedundantImport">
            <property name="severity" value="error"/>
        </module>
        <module name="UnusedImports">
            <property name="severity" value="error"/>
            <property name="processJavadoc" value="true"/>
        </module>

        <!-- [Javadoc Comments] Checks Javadoc. -->
        <!-- See http://checkstyle.sourceforge.net/config_javadoc.html -->
        <module name="JavadocMethod">
            <property name="severity" value="warning"/>
            <property name="allowedAnnotations" value="Override"/>
            <property name="validateThrows" value="false"/>
            <property name="scope" value="public"/>
            <property name="excludeScope" value="private"/>
            <property name="allowUndeclaredRTE" value="false"/>
            <property name="allowThrowsTagsForSubclasses" value="false"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingThrowsTags" value="true"/>
            <property name="allowMissingReturnTag" value="true"/>
            <property name="logLoadErrors" value="true"/>
            <property name="suppressLoadErrors" value="false"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF"/>
        </module>
        <module name="MissingJavadocMethod">
            <property name="minLineCount" value="-1"/>
            <property name="ignoreMethodNamesRegex" value=""/>
            <property name="allowMissingPropertyJavadoc" value="true"/>
        </module>
        <module name="JavadocStyle">
            <property name="severity" value="warning"/>
            <property name="scope" value="public"/>
            <property name="checkFirstSentence" value="true"/>
            <property name="checkEmptyJavadoc" value="true"/>
            <property name="checkHtml" value="true"/>
            <property name="tokens" value="ANNOTATION_DEF, ANNOTATION_FIELD_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF, INTERFACE_DEF, METHOD_DEF, PACKAGE_DEF, VARIABLE_DEF"/>
        </module>
        <module name="JavadocType">
            <property name="severity" value="warning"/>
            <property name="scope" value="public"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowUnknownTags" value="false"/>
            <property name="tokens" value="INTERFACE_DEF, CLASS_DEF, ENUM_DEF, ANNOTATION_DEF"/>
        </module>
        <module name="JavadocVariable">
            <property name="severity" value="warning"/>
            <property name="scope" value="public"/>
            <property name="ignoreNamePattern" value=""/>
            <property name="tokens" value="ENUM_CONSTANT_DEF"/>
        </module>

        <!-- [Metrics] -->
        <!-- See http://checkstyle.sourceforge.net/config_metrics.html -->

        <!-- [Miscellaneous] -->
        <!-- See http://checkstyle.sourceforge.net/config_misc.html -->
        <module name="ArrayTypeStyle">
            <property name="severity" value="error"/>
            <property name="javaStyle" value="true"/>
        </module>
        <module name="FinalParameters">
            <property name="severity" value="ignore"/>
            <property name="ignorePrimitiveTypes" value="false"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="TodoComment">
            <property name="severity" value="info"/>
            <property name="format" value="(TODO)|(todo:)|(FIXME)|(fixme)"/>
        </module>
        <module name="UpperEll">
            <property name="severity" value="error"/>
        </module>

        <!-- [Modifiers] -->
        <!-- See http://checkstyle.sourceforge.net/config_modifier.html -->
        <module name="ModifierOrder">
            <property name="severity" value="error"/>
        </module>
        <module name="RedundantModifier">
            <property name="severity" value="error"/>
            <property name="tokens" value="METHOD_DEF, VARIABLE_DEF, ANNOTATION_FIELD_DEF, INTERFACE_DEF, CTOR_DEF, CLASS_DEF, ENUM_DEF, RESOURCE"/>
        </module>

        <!-- [Naming Conventions] Checks that validate identifiers for particular code elements. -->
        <!-- http://checkstyle.sourceforge.net/config_naming.html -->
        <module name="ConstantName">
            <property name="severity" value="error"/>
            <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage" value="true"/>
            <property name="applyToPrivate" value="true"/>
            <message key="name.invalidPattern"
                     value="Constant name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="LocalFinalVariableName">
            <property name="severity" value="error"/>
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="tokens" value="VARIABLE_DEF, PARAMETER_DEF"/>
            <message key="name.invalidPattern"
                     value="Local final variable name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="LocalVariableName">
            <property name="severity" value="error"/>
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="allowOneCharVarInForLoop" value="false"/>
            <message key="name.invalidPattern"
                     value="Local variable name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MemberName">
            <property name="severity" value="error"/>
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage" value="true"/>
            <property name="applyToPrivate" value="true"/>
            <message key="name.invalidPattern"
                     value="Member name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MethodName">
            <property name="severity" value="error"/>
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="allowClassName" value="false"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage" value="true"/>
            <property name="applyToPrivate" value="true"/>
            <message key="name.invalidPattern"
                     value="Method name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="PackageName">
            <property name="severity" value="error"/>
            <property name="format" value="^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$"/>
            <message key="name.invalidPattern"
                     value="Package name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="ParameterName">
            <property name="severity" value="error"/>
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="ignoreOverridden" value="false"/>
            <property name="accessModifiers" value="public, protected, package, private"/>
            <message key="name.invalidPattern"
                     value="Parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="StaticVariableName">
            <property name="severity" value="error"/>
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage" value="true"/>
            <property name="applyToPrivate" value="true"/>
            <message key="name.invalidPattern"
                     value="Static variable name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="TypeName">
            <property name="severity" value="error"/>
            <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage" value="true"/>
            <property name="applyToPrivate" value="true"/>
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF"/>
            <message key="name.invalidPattern"
                     value="Type name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <!-- [Regexp] -->
        <!-- See http://checkstyle.sourceforge.net/config_regexp.html -->

        <!-- [Size Violations] -->
        <!-- See http://checkstyle.sourceforge.net/config_sizes.html -->
        <module name="MethodLength">
            <property name="severity" value="error"/>
            <property name="max" value="150"/>
            <property name="countEmpty" value="true"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="ParameterNumber">
            <property name="severity" value="error"/>
            <property name="max" value="7"/>
            <property name="ignoreOverriddenMethods" value="false"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF"/>
        </module>

        <!-- [Whitespace] -->
        <!-- See http://checkstyle.sourceforge.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad">
            <property name="severity" value="error"/>
            <property name="option" value="nospace"/>
        </module>
        <module name="GenericWhitespace">
            <property name="severity" value="error"/>
            <message key="ws.followed"
                     value="GenericWhitespace ''{0}'' is followed by whitespace."/>
            <message key="ws.preceded"
                     value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
            <message key="ws.illegalFollow"
                     value="GenericWhitespace ''{0}'' should followed by whitespace."/>
            <message key="ws.notPreceded"
                     value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
        </module>
        <module name="MethodParamPad">
            <property name="severity" value="error"/>
            <property name="allowLineBreaks" value="false"/>
            <property name="option" value="nospace"/>
            <property name="tokens" value="CTOR_DEF, LITERAL_NEW, METHOD_CALL, METHOD_DEF, SUPER_CTOR_CALL, ENUM_CONSTANT_DEF"/>
        </module>
        <module name="NoWhitespaceAfter">
            <property name="severity" value="error"/>
            <property name="allowLineBreaks" value="true"/>
            <property name="tokens" value="INC, DEC, UNARY_MINUS, UNARY_PLUS, BNOT, LNOT, DOT, ARRAY_DECLARATOR, INDEX_OP"/>
        </module>
        <module name="NoWhitespaceBefore">
            <property name="severity" value="error"/>
            <property name="allowLineBreaks" value="false"/>
            <property name="tokens" value="COMMA, SEMI, POST_INC, POST_DEC, ELLIPSIS"/>
        </module>
        <module name="OperatorWrap">
            <property name="severity" value="info"/>
            <property name="tokens" value="QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR, GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, TYPE_EXTENSION_AND, LITERAL_INSTANCEOF"/>
            <property name="option" value="nl"/>
        </module>
        <module name="ParenPad">
            <property name="severity" value="error"/>
            <property name="option" value="nospace"/>
        </module>
        <module name="TypecastParenPad">
            <property name="severity" value="error"/>
            <property name="option" value="nospace"/>
        </module>
        <module name="WhitespaceAfter">
            <property name="severity" value="error"/>
            <property name="tokens" value="COMMA, SEMI, TYPECAST, LITERAL_IF, LITERAL_ELSE, LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, DO_WHILE"/>
        </module>
        <module name="WhitespaceAround">
            <property name="severity" value="error"/>
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <property name="allowEmptyLambdas" value="true"/>
            <property name="allowEmptyCatches" value="true"/>
            <property name="ignoreEnhancedForColon" value="true"/>
            <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND"/>
            <message key="ws.notFollowed"
                     value="WhitespaceAround: ''{0}'' is not followed by whitespace."/>
            <message key="ws.notPreceded"
                     value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
        </module>

        <module name="SuppressionCommentFilter">
            <property name="offCommentFormat" value="CHECKSTYLE\:SUPPRESS\:([\w\|]+)"/>
            <property name="onCommentFormat"  value=""  default="CHECKSTYLE\:UNSUPPRESS\:([\w\|]+)$"/>
            <property name="checkCPP"  value="true"/>
            <property name="checkC"  value="true"/>
            <property name="checkFormat" value="$1"/>
        </module>
    </module>
</module>
